set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/vundle
call vundle#rc()

Plugin 'gmarik/vundle'
Plugin 'altercation/vim-colors-solarized'
Plugin 'kien/ctrlp.vim'
Plugin 'vim-scripts/indentpython.vim'
Bundle 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic'
Plugin 'nvie/vim-flake8'

filetype plugin indent on    " required

syntax enable
colorscheme happy_hacking

let mapleader = ","
let python_highlight_all=1

set autoread
set autoindent
set expandtab
set hlsearch
set incsearch
set ignorecase
set ruler
set number

autocmd FileType py setlocal tabstop=4 shiftwidth=4 softtabstop=4 textwidth=79
autocmd FileType javascript setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType html setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType css setlocal tabstop=2 shiftwidth=2 softtabstop=2

set colorcolumn=80
let &colorcolumn=join(range(81,999),",")
let &colorcolumn="80,".join(range(121,999),",")

"set background=dark
"let g:solarized_visibility="high"
"let g:solarized_contrast="high"
"let g:solarized_termcolors=256
"colorscheme solarized


vnoremap // y/<C-R>"<CR>

" --------------------
"  VCS (plugin)
" --------------------
let g:VCSCommandDeleteOnHide=1
map <leader>cd :VCSDiff<CR>
map <leader>cl :VCSLog<CR>
map <leader>ca :VCSAnnotate<CR>
map <leader>cv :VCSVimDiff<CR>
" -------------------
"  END VCS (plugin)
" --------------------
"
" --------------------
"  YouCompleteMe (plugin)
" --------------------
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_collect_identifiers_from_tags_files = 1 " Let YCM read tags from Ctags file
let g:ycm_use_ultisnips_completer = 1 " Default 1, just ensure
let g:ycm_seed_identifiers_with_syntax = 1 " Completion for programming language's keyword
let g:ycm_complete_in_comments = 1 " Completion in comments
let g:ycm_complete_in_strings = 1 " Completion in string
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>
" --------------------
"  END YouCompleteMe (plugin)
" --------------------

" --------------------
"  CtrlP (plugin)
" --------------------
let g:ctrlp_custom_ignore = 'venv'
" --------------------
"  END CtrlP (plugin)
" --------------------

" python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF
